name: 🧹 Clean SDK Build

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 🧹 Clean Environment
      run: |
        # Clear ALL Android-related environment variables
        unset ANDROID_HOME
        unset ANDROID_SDK_ROOT
        unset ANDROID_SDK_HOME
        unset ANDROID_NDK_HOME
        unset ANDROID_NDK_ROOT

        echo "Environment cleaned"

    - name: 📱 Fresh Android SDK Setup
      run: |
        # Create completely fresh SDK
        SDK_DIR="$HOME/fresh-android-sdk"
        mkdir -p $SDK_DIR
        cd $SDK_DIR

        # Download Android SDK command line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip -q commandlinetools-linux-11076708_latest.zip
        rm commandlinetools-linux-11076708_latest.zip

        # Setup directory structure
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true

        # Set ONLY ANDROID_HOME (no other Android env vars)
        echo "ANDROID_HOME=$SDK_DIR" >> $GITHUB_ENV
        echo "$SDK_DIR/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$SDK_DIR/platform-tools" >> $GITHUB_PATH

        # Accept licenses and install components
        export ANDROID_HOME=$SDK_DIR
        yes | $SDK_DIR/cmdline-tools/latest/bin/sdkmanager --licenses || true
        $SDK_DIR/cmdline-tools/latest/bin/sdkmanager "platform-tools"
        $SDK_DIR/cmdline-tools/latest/bin/sdkmanager "platforms;android-34"
        $SDK_DIR/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0"

    - name: 🏗️ Install Gradle
      run: |
        # Use system Gradle to avoid wrapper issues
        sudo apt-get update -qq
        sudo apt-get install -y gradle

        # Verify
        gradle --version

    - name: 🔍 Verify Clean Environment
      run: |
        echo "=== Environment Check ==="
        echo "ANDROID_HOME: ${ANDROID_HOME:-'NOT SET'}"
        echo "ANDROID_SDK_ROOT: ${ANDROID_SDK_ROOT:-'NOT SET'}"
        echo "ANDROID_SDK_HOME: ${ANDROID_SDK_HOME:-'NOT SET'}"

        echo "=== SDK Contents ==="
        ls -la $ANDROID_HOME/ || echo "SDK directory not found"
        ls -la $ANDROID_HOME/platforms/ || echo "No platforms found"
        ls -la $ANDROID_HOME/build-tools/ || echo "No build-tools found"

    - name: 🏗️ Build APK
      run: |
        echo "Building with clean environment..."

        # Remove any wrapper files to force system gradle
        rm -f ./gradlew ./gradlew.bat

        # Build
        gradle clean --no-daemon
        gradle assembleDebug --no-daemon

    - name: 📋 Check Build Results
      run: |
        echo "=== Build Results ==="
        find . -name "*.apk" -exec ls -la {} \; || echo "No APK files found"

        if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
          echo "✅ SUCCESS: APK found!"
          ls -la app/build/outputs/apk/debug/app-debug.apk
        else
          echo "❌ APK not found"
          ls -la app/build/outputs/apk/debug/ 2>/dev/null || echo "Debug directory missing"
        fi

    - name: 📤 Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: PathTracker-CleanSDK-APK
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: 🎉 Success Summary
      if: success()
      run: |
        echo "🎉 PathTracker APK built successfully with clean SDK!"
        echo "📍 APK: app/build/outputs/apk/debug/app-debug.apk"
        echo "📦 Size: $(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)"
        echo "✅ Ready for download from Artifacts section"