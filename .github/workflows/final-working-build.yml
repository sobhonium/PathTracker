name: ✅ Final Working Build

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 🏗️ Setup Gradle (Direct Install)
      run: |
        # Remove any existing gradlew to avoid conflicts
        rm -f ./gradlew ./gradlew.bat

        # Download and install Gradle directly
        cd /opt
        sudo wget -q https://services.gradle.org/distributions/gradle-8.4-bin.zip
        sudo unzip -q gradle-8.4-bin.zip
        sudo rm gradle-8.4-bin.zip

        # Add to PATH
        echo "/opt/gradle-8.4/bin" >> $GITHUB_PATH

        # Verify installation
        /opt/gradle-8.4/bin/gradle --version

    - name: 📱 Setup Android SDK
      run: |
        # Use existing SDK and fix environment conflicts
        export ANDROID_HOME=/usr/local/lib/android/sdk
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk

        # Clear conflicting environment variables
        unset ANDROID_SDK_HOME

        # Set unified environment variables
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

        # Install missing components if needed
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" || true
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34" || true
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0" || true

    - name: 🔍 Verify Setup
      run: |
        echo "Gradle version:"
        gradle --version
        echo "Java version:"
        java -version
        echo "Android SDK:"
        ls -la $ANDROID_HOME/platforms/
        ls -la $ANDROID_HOME/build-tools/

    - name: 🧹 Clean Build
      run: gradle clean --stacktrace

    - name: 🏗️ Build Debug APK
      run: gradle assembleDebug --stacktrace --info --no-daemon

    - name: 📋 Verify APK
      run: |
        echo "Looking for APK files..."
        find . -name "*.apk" -exec ls -la {} \;

        if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
          echo "✅ APK found!"
          ls -la app/build/outputs/apk/debug/app-debug.apk
        else
          echo "❌ APK not found!"
          ls -la app/build/outputs/apk/debug/ || echo "Debug directory not found"
        fi

    - name: 📤 Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: PathTracker-Final-APK
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: 📊 Final Status
      if: always()
      run: |
        if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
          echo "🎉 SUCCESS: PathTracker APK built successfully!"
          echo "📦 Size: $(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)"
          echo "📍 Ready for download from Artifacts section"
        else
          echo "💥 FAILED: APK was not generated"
          echo "Check the build logs above for errors"
        fi